local VERSION = 1.3

--[[ TooltipLib
--
--	This is an embedded library to keep me from having to rewrite my tooltip
--	functions over and over again.
--
--	TooltipLib has the following methods:
--
--	GetTooltip( [tooltipName] )
--		Returns a basic tooltip, optionally with the specified name
--
--	GetTooltipTextColor( tooltip, position, line )
--		Returns the text color at the position and line on the provided tooltip
--
--	GetTooltipTextColorLeft( tooltip, line )
--		Returns the left side text color at the specified line on the provided tooltip
--
--	GetTooltipTextColorRight( tooltip, line )
--		Returns the right side text color at the specified line on the provided tooltip
--
--	GetTooltipValue( tooltip, position, line )
--		Returns the value at the position and line on the provided tooltip
--
--	GetTooltipValueLeft( tooltip, line )
--		Returns the left side value at the specified line on the provided tooltip
--
--	GetTooltipValueRight( tooltip, line )
--		Returns the right side value at the specified line on the provided tooltip
--
--	SetTooltipTextColor( tooltip, position, line, r, g, b, a )
--		Sets the text color at the position and line on the provided tooltip to
--		the provided text color
--
--	SetTooltipTextColorLeft( tooltip, line, r, g, b, a )
--		Sets the left side text color at the position and line on the provided tooltip to
--		the provided text color
--
--	SetTooltipTextColorRight( tooltip, line, r, g, b, a )
--		Sets the right side text color at the position and line on the provided tooltip to
--		the provided text color
--
--	SetTooltipValue( tooltip, position, line, value )
--		Sets the value at the position and line on the provided tooltip to
--		the provided value
--
--	SetTooltipValueLeft( tooltip, line, value )
--		Sets the left side value at the position and line on the provided tooltip to
--		the provided value
--
--	SetTooltipValueRight( tooltip, line, value )
--		Sets the right side value at the position and line on the provided tooltip to
--		the provided value
--
--	TooltipFromTable( tooltip, tooltipData )
--		Builds a tooltip's contents from the provided table (generated by TooltipToTable)
--
--	TooltipToTable( tooltip )
--		Scans a tooltip's contents into a table for later use with TooltipFromTable
--
--	Additionally, tooltips returned from GetTooltip will have the following
--	additional methods:
--		tooltip:GetTextColor( position, line )
--		tooltip:GetTextColorLeft( line )
--		tooltip:GetTextColorRight( line )
--		tooltip:GetValue( position, line )
--		tooltip:GetValueLeft( line )
--		tooltip:GetValueRight( line )
--		tooltip:SetTextColor( position, line, r, g, b, a )
--		tooltip:SetTextColorLeft( line, r, g, b, a )
--		tooltip:SetTextColorRight( line, r, g, b, a )
--		tooltip:SetValue( position, line, value )
--		tooltip:SetValueLeft( line, value )
--		tooltip:SetValueRight( line, value )
--		tooltip:FromTable( tooltipData )
--		tooltip:ToTable()
--]]

if ( ( not TooltipLib ) or ( not TooltipLib.Version ) or ( TooltipLib.Version < VERSION ) ) then

------------------------------------------------------------------------------
-- TooltipLib Library Begin
------------------------------------------------------------------------------

local lib = { Version = VERSION }

lib.TOOLTIP_NAME = "TooltipLibTooltip"

function lib.GetTooltip( tooltipName )
	if ( type( tooltipName ) ~= "string" ) then tooltipName = nil end
	tooltipName = tooltipName or lib.TOOLTIP_NAME
	local tooltip = getglobal( tooltipName )
	if ( not tooltip ) then
		tooltip = CreateFrame( "GameTooltip", tooltipName, UIParent, "GameTooltipTemplate" )
	end
	if ( not tooltip ) then
		return nil
	end
	if ( not tooltip:IsObjectType( "GameTooltip" ) ) then
		return nil
	end

	-- Make sure it's got the helper methods		
	tooltip.GetTextColor = lib.GetTextColor
	tooltip.GetTextColorLeft = lib.GetTextColorLeft
	tooltip.GetTextColorRight = lib.GetTextColorRight
	tooltip.GetValue = lib.GetTooltipValue
	tooltip.GetValueLeft = lib.GetTooltipValueLeft
	tooltip.GetValueRight = lib.GetTooltipValueRight
	
	tooltip.SetTextColor = lib.SetTooltipTextColor
	tooltip.SetTextColorLeft = lib.SetTooltipTextColorLeft
	tooltip.SetTextColorRight = lib.SetTooltipTextColorRight	
	tooltip.SetValue = lib.SetTooltipValue
	tooltip.SetValueLeft = lib.SetTooltipValueLeft
	tooltip.SetValueRight = lib.SetTooltipValueRight
	
	tooltip.FromTable = lib.TooltipFromTable
	tooltip.ToTable = lib.TooltipToTable

	--tooltip:SetFrameStrata( "TOOLTIP" )
	if ( not tooltip:IsOwned( UIParent ) ) then tooltip:SetOwner( UIParent, "ANCHOR_NONE" ) end
	return tooltip
end

function lib.GetTooltipTextColor( tooltip, position, line )
	if ( not tooltip ) then return end

	local fieldName = tooltip:GetName().."Text"..position..line
	local tooltipField = getglobal( fieldName )
	if ( not tooltipField ) then
		return nil
	end
	if ( tooltipField:IsShown() ) then
		return tooltipField:GetTextColor()
	end
	return nil
end

function lib.GetTooltipTextColorLeft( tooltip, line )
	return lib.GetTooltipTextColor( tooltip, "Left", line )
end

function lib.GetTooltipTextColorRight( tooltip, line )
	return lib.GetTooltipTextColor( tooltip, "Right", line )
end

function lib.GetTooltipValue( tooltip, position, line )
	if ( not tooltip ) then return end

	local fieldName = tooltip:GetName().."Text"..position..line
	local tooltipField = getglobal( fieldName )
	if ( not tooltipField ) then
		return nil
	end
	if ( tooltipField:IsShown() ) then
		return tooltipField:GetText()
	end
	return nil
end

function lib.GetTooltipValueLeft( tooltip, line )
	return lib.GetTooltipValue( tooltip, "Left", line )
end

function lib.GetTooltipValueRight( tooltip, line )
	return lib.GetTooltipValue( tooltip, "Right", line )
end

function lib.SetTooltipTextColor( tooltip, position, line, r, g, b, a )
	if ( not tooltip ) then return end

	local tooltipField = getglobal( tooltip:GetName().."Text"..position..line )
	if ( not tooltipField ) then
		return
	end
	if ( not tooltipField:IsShown() ) then tooltipField:Show() end
	tooltipField:SetTextColor( r, g, b, a )
end

function lib.SetTooltipTextColorLeft( tooltip, line, r, g, b, a )
	return lib.SetTooltipTextColor( tooltip, "Left", line, r, g, b, a )
end

function lib.SetTooltipTextColorRight( tooltip, line, r, g, b, a )
	return lib.SetTooltipTextColor( tooltip, "Right", line, r, g, b, a )
end

function lib.SetTooltipValue( tooltip, position, line, value )
	if ( not tooltip ) then return end

	local tooltipField = getglobal( tooltip:GetName().."Text"..position..line )
	if ( not tooltipField ) then
		return
	end
	if ( not tooltipField:IsShown() ) then tooltipField:Show() end
	tooltipField:SetText( value )
end

function lib.SetTooltipValueLeft( tooltip, line, value )
	return lib.SetTooltipValue( tooltip, "Left", line, value )
end

function lib.SetTooltipValueRight( tooltip, line, value )
	return lib.SetTooltipValue( tooltip, "Right", line, value )
end

function lib.TooltipFromTable( tooltip, tooltipData )
	if ( not tooltip ) then return end
	if ( not tooltipData ) then return end

	tooltip:ClearLines()
	for lineNum, lineData in pairs( tooltipData ) do
		local left = lineData.left
		local right = lineData.right
		
		if ( right ) then
			if ( left ) then
				tooltip:AddDoubleLine( left.text, right.text,
					left.r, left.g, left.b, right.r, right.g, right.b )
			else
				tooltip:AddDoubleLine( nil, right.text,
					1, 1, 1, right.r, right.g, right.b )
			end
		else
			local wrap = left.wrap
			if ( lineNum == #tooltipData ) then wrap = 1 end
			tooltip:AddLine( left.text, left.r, left.g, left.b, wrap )
		end
	end
	tooltip:Show()
end


function lib.TooltipToTable( tooltip )
	if ( not tooltip ) then return nil end
	
	local tooltipData = {}
	
	for lineNum = 1, tooltip:NumLines() or 0, 1 do
		local lineData = {}
		
		local text = lib.GetTooltipValueLeft( tooltip, lineNum )
		if ( text ) then
			local r, g, b, a = lib.GetTooltipTextColorLeft( tooltip, lineNum )
			lineData.left = { text = text, r = r, g = g, b = b, a = a }
		end

		text = lib.GetTooltipValueRight( tooltip, lineNum )
		if ( text ) then
			r, g, b, a = lib.GetTooltipTextColorRight( tooltip, lineNum )
			lineData.right = { text = text, r = r, g = g, b = b, a = a }
		end
		
		tooltipData[ lineNum ] = lineData
	end	
	
	return tooltipData
end

function lib.InsertTooltipTableLine( tooltipData, insertBefore, text, r, g, b, wrap )
	local line = {}
	if ( text ) then
		line.left = { text = text, r = r, g = g, b = b, a = 1, wrap = wrap }
	end
	table.insert( tooltipData, insertBefore, line )
end

function lib.InsertTooltipTableDoubleLine( tooltipData, insertBefore, leftText, rightText, leftR, leftG, leftB, rightR, rightG, rightB )
	local line = {}
	if ( leftText ) then
		line.left = { text = leftText, r = leftR, g = leftG, b = leftB, a = 1 }
	end
	if ( rightText ) then
		line.right = { text = rightText, r = rightR, g = rightG, b = rightB, a = 1 }
	end
	table.insert( tooltipData, insertBefore, line )
end

function lib.RemoveTooltipTableLine( tooltipData, lineNum )
	table.remove( tooltipData, lineNum )
end

------------------------------------------------------------------------------
-- TooltipLib Exposed Interface
------------------------------------------------------------------------------

TooltipLib = {
	Version = lib.Version,

	GetTooltip = lib.GetTooltip,

	GetTooltipTextColor = lib.GetTooltipTextColor,
	GetTooltipTextColorLeft = lib.GetTooltipTextColorLeft,
	GetTooltipTextColorRight = lib.GetTooltipTextColorRight,
	GetTooltipValue = lib.GetTooltipValue,
	GetTooltipValueLeft = lib.GetTooltipValueLeft,
	GetTooltipValueRight = lib.GetTooltipValueRight,
	
	SetTooltipTextColor = lib.SetTooltipTextColor,
	SetTooltipTextColorLeft = lib.SetTooltipTextColorLeft,
	SetTooltipTextColorRight = lib.SetTooltipTextColorRight,
	SetTooltipValue = lib.SetTooltipValue,
	SetTooltipValueLeft = lib.SetTooltipValueLeft,
	SetTooltipValueRight = lib.SetTooltipValueRight,
	
	TooltipFromTable = lib.TooltipFromTable,
	TooltipToTable = lib.TooltipToTable,
	InsertTooltipTableLine = lib.InsertTooltipTableLine,
	InsertTooltipTableDoubleLine = lib.InsertTooltipTableDoubleLine,
	RemoveTooltipTableLine = lib.RemoveTooltipTableLine,
}

------------------------------------------------------------------------------
-- TooltipLib Library End
------------------------------------------------------------------------------
end
